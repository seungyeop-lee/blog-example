<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.seungyeop_lee.blog_example.architecture_in_spring.simple_with_mybatis.entity.BookMapper">
  <resultMap id="BaseResultMap" type="com.github.seungyeop_lee.blog_example.architecture_in_spring.simple_with_mybatis.entity.Book">
    <id column="BOOK_ID" jdbcType="BIGINT" property="bookId" />
    <result column="TITLE" jdbcType="VARCHAR" property="title" />
    <result column="ISBN" jdbcType="VARCHAR" property="isbn" />
    <result column="PUBLISHED_DATE" jdbcType="DATE" property="publishedDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    BOOK_ID, TITLE, ISBN, PUBLISHED_DATE
  </sql>
  <select id="selectByExample" parameterType="com.github.seungyeop_lee.blog_example.architecture_in_spring.simple_with_mybatis.entity.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    where BOOK_ID = #{bookId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from book
    where BOOK_ID = #{bookId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.github.seungyeop_lee.blog_example.architecture_in_spring.simple_with_mybatis.entity.BookExample">
    delete from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="BOOK_ID" keyProperty="bookId" parameterType="com.github.seungyeop_lee.blog_example.architecture_in_spring.simple_with_mybatis.entity.Book" useGeneratedKeys="true">
    insert into book (TITLE, ISBN, PUBLISHED_DATE
      )
    values (#{title,jdbcType=VARCHAR}, #{isbn,jdbcType=VARCHAR}, #{publishedDate,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" keyColumn="BOOK_ID" keyProperty="bookId" parameterType="com.github.seungyeop_lee.blog_example.architecture_in_spring.simple_with_mybatis.entity.Book" useGeneratedKeys="true">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        TITLE,
      </if>
      <if test="isbn != null">
        ISBN,
      </if>
      <if test="publishedDate != null">
        PUBLISHED_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null">
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="publishedDate != null">
        #{publishedDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.github.seungyeop_lee.blog_example.architecture_in_spring.simple_with_mybatis.entity.BookExample" resultType="java.lang.Long">
    select count(*) from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book
    <set>
      <if test="row.bookId != null">
        BOOK_ID = #{row.bookId,jdbcType=BIGINT},
      </if>
      <if test="row.title != null">
        TITLE = #{row.title,jdbcType=VARCHAR},
      </if>
      <if test="row.isbn != null">
        ISBN = #{row.isbn,jdbcType=VARCHAR},
      </if>
      <if test="row.publishedDate != null">
        PUBLISHED_DATE = #{row.publishedDate,jdbcType=DATE},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book
    set BOOK_ID = #{row.bookId,jdbcType=BIGINT},
      TITLE = #{row.title,jdbcType=VARCHAR},
      ISBN = #{row.isbn,jdbcType=VARCHAR},
      PUBLISHED_DATE = #{row.publishedDate,jdbcType=DATE}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.seungyeop_lee.blog_example.architecture_in_spring.simple_with_mybatis.entity.Book">
    update book
    <set>
      <if test="title != null">
        TITLE = #{title,jdbcType=VARCHAR},
      </if>
      <if test="isbn != null">
        ISBN = #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="publishedDate != null">
        PUBLISHED_DATE = #{publishedDate,jdbcType=DATE},
      </if>
    </set>
    where BOOK_ID = #{bookId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.seungyeop_lee.blog_example.architecture_in_spring.simple_with_mybatis.entity.Book">
    update book
    set TITLE = #{title,jdbcType=VARCHAR},
      ISBN = #{isbn,jdbcType=VARCHAR},
      PUBLISHED_DATE = #{publishedDate,jdbcType=DATE}
    where BOOK_ID = #{bookId,jdbcType=BIGINT}
  </update>
</mapper>